plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.1.0.4882"
    id 'jacoco'
}

group = 'ru.tpu.hostel'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sonarqube {
    properties {
        property "sonar.projectKey", "TpaBKa251_API_Gateway"
        property "sonar.organization", "hostel-service" // Замените на имя вашей организации
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv("SONAR_TOKEN") // Используется токен из секретов GitHub
        property "sonar.coverage.jacoco.xmlReportPaths", layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml")
        property "sonar.coverage.exclusions", "**/*Generated*.java,**/model/*.java" // Исключения из анализа
        property "sonar.java.binaries", "build/classes/java/main" // Путь к скомпилированным классам
    }
}

ext {
    set('springCloudVersion', "2023.0.3") // Актуальная версия Spring Cloud для Spring Boot 3.x
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // Основные зависимости для WebFlux и Gateway
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebFlux
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway' // Gateway
    implementation 'org.springframework.boot:spring-boot-starter-security' // Для безопасности
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // Для JWT аутентификации
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // Для актюаторов
    implementation 'io.micrometer:micrometer-tracing-bridge-otel:1.4.4'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.37.0'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Зависимости для JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Для работы с Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // Для тестирования
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Генерируем отчет после тестов
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true) // Включаем XML для SonarCloud
        html.required.set(false)
        csv.required.set(false)
    }
}

jacoco {
    toolVersion = "0.8.11" // Последняя версия
}

jar {
    manifest {
        attributes 'Main-Class': 'ru.tpu.hostel.api_gateway.ApiGatewayApplication'
    }
}
